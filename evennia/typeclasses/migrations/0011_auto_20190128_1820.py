# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-01-28 18:20
from __future__ import unicode_literals

from django.db import migrations, models
import evennia.utils.picklefield


class Migration(migrations.Migration):

    dependencies = [
        ('typeclasses', '0010_delete_old_player_tables'),
    ]

    operations = [
        migrations.DeleteModel(
            name='DefaultAccount',
        ),
        migrations.DeleteModel(
            name='DefaultCharacter',
        ),
        migrations.DeleteModel(
            name='DefaultExit',
        ),
        migrations.DeleteModel(
            name='DefaultGuest',
        ),
        migrations.DeleteModel(
            name='DefaultObject',
        ),
        migrations.DeleteModel(
            name='DefaultRoom',
        ),
        migrations.DeleteModel(
            name='DefaultScript',
        ),
        migrations.DeleteModel(
            name='DoNothing',
        ),
        migrations.DeleteModel(
            name='ScriptBase',
        ),
        migrations.DeleteModel(
            name='Store',
        ),
        migrations.AlterField(
            model_name='attribute',
            name='db_attrtype',
            field=models.CharField(blank=True, db_index=True, help_text='Subclass of Attribute (None or nick)', max_length=16, null=True, verbose_name='attrtype'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='db_category',
            field=models.CharField(blank=True, db_index=True, help_text='Optional categorization of attribute.', max_length=128, null=True, verbose_name='category'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='db_date_created',
            field=models.DateTimeField(auto_now_add=True, verbose_name='date_created'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='db_key',
            field=models.CharField(db_index=True, max_length=255, verbose_name='key'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='db_lock_storage',
            field=models.TextField(blank=True, help_text='Lockstrings for this object are stored here.', verbose_name='locks'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='db_model',
            field=models.CharField(blank=True, db_index=True, help_text="Which model of object this attribute is attached to (A natural key like 'objects.objectdb'). You should not change this value unless you know what you are doing.", max_length=32, null=True, verbose_name='model'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='db_strvalue',
            field=models.TextField(blank=True, help_text='String-specific storage for quick look-up', null=True, verbose_name='strvalue'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='db_value',
            field=evennia.utils.picklefield.PickledObjectField(help_text='The data returned when the attribute is accessed. Must be written as a Python literal if editing through the admin interface. Attribute values which are not Python literals cannot be edited through the admin interface.', null=True, verbose_name='value'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='db_category',
            field=models.CharField(db_index=True, help_text='tag category', max_length=64, null=True, verbose_name='category'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='db_data',
            field=models.TextField(blank=True, help_text='optional data field with extra information. This is not searched for.', null=True, verbose_name='data'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='db_key',
            field=models.CharField(db_index=True, help_text='tag identifier', max_length=255, null=True, verbose_name='key'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='db_model',
            field=models.CharField(db_index=True, help_text='database model to Tag', max_length=32, null=True, verbose_name='model'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='db_tagtype',
            field=models.CharField(db_index=True, help_text='overall type of Tag', max_length=16, null=True, verbose_name='tagtype'),
        ),
    ]
